typealias S=List<List<Char>>val e="move (?<count>[1-9][0-9]*) from (?<from>[1-9][0-9]*) to (?<to>[1-9][0-9]*)".toRegex();print(java.io.File("../aoc/input5.txt").readLines().partition{it.startsWith("m")}.let{(c,s)->c to s.takeWhile{it[1]!='1'}.fold(listOf()){p:S,r->r.mapIndexedNotNull{i,c->(i+1).takeIf{c=='['}}.toSet().let{(0..(r.length-3)/4).map{n->val k=4*n+1;if(k in it)r[k]else null}}.mapIndexed{i,c->c?.let{listOf(it)+(p.getOrNull(i)?:listOf())}?:listOf()}}}.let{(c,s)->c.fold(s){a,b->val(count,from,to)=e.matchEntire(b)!!.groupValues.drop(1).map{it.toInt()};a.mapIndexed{i,c->when(i+1){from->c.dropLast(count);to->c+a[from-1].takeLast(count);else->c}}}.map{it.last()}.joinToString("")})
